import { ArInfo, CryptographicParameters, IdObjectRequestV1, IdRecoveryRequest, IpInfo, Network, Versioned } from './types';
export declare type IdentityRequestInput = {
    ipInfo: IpInfo;
    globalContext: CryptographicParameters;
    arsInfos: Record<string, ArInfo>;
    seed: string;
    net: Network;
    identityIndex: number;
    arThreshold: number;
};
/**
 * Creates a V1 identityRequest.
 */
export declare function createIdentityRequest(input: IdentityRequestInput): Versioned<IdObjectRequestV1>;
export declare type IdentityRecoveryRequestInput = {
    ipInfo: IpInfo;
    globalContext: CryptographicParameters;
    seedAsHex: string;
    net: Network;
    identityIndex: number;
    timestamp: number;
};
/**
 * Creates a identity Recovery Request.
 */
export declare function createIdentityRecoveryRequest(input: IdentityRecoveryRequestInput): Versioned<IdRecoveryRequest>;
