import type { Fn } from "@thi.ng/api";
import type { IReducible, TxLike } from "./api.js";
/**
 * Transforms `xs` with given transducer and optional side effect
 * without any reduction step. If `fx` is given it will be called with
 * every value produced by the transducer. If `fx` is *not* given, the
 * transducer is assumed to include at least one {@link sideEffect} step
 * itself. Returns nothing.
 *
 * @param tx -
 * @param fx -
 * @param xs -
 */
export declare function run<A>(tx: TxLike<A, any>, xs: Iterable<A>): void;
export declare function run<A>(tx: TxLike<A, any>, xs: IReducible<any, A>): void;
export declare function run<A, B>(tx: TxLike<A, B>, fx: Fn<B, void>, xs: Iterable<A>): void;
export declare function run<A, B>(tx: TxLike<A, B>, fx: Fn<B, void>, xs: IReducible<any, A>): void;
//# sourceMappingURL=run.d.ts.map