import type { Reducer, Transducer } from "./api.js";
/**
 * Transducer which performs "scan" operation via given reducer.
 *
 * @remarks
 * If an input `src` is given an initial result `init` must be provided
 * too as arg. Use `null` or `undefined` to use the given reducer's
 * default.
 *
 * @remarks
 * https://en.wikipedia.org/wiki/Prefix_sum#Scan_higher_order_function
 *
 * @example
 * ```ts
 * [...iterator(scan(add()), range(10))]
 * // [ 0, 1, 3, 6, 10, 15, 21, 28, 36, 45 ]
 *
 * [...scan(add(), null, range(10))]
 * // [ 0, 1, 3, 6, 10, 15, 21, 28, 36, 45 ]
 * ```
 *
 * @param rfn - reducer used as scan operator
 * @param init -
 * @param src -
 */
export declare function scan<A, B>(rfn: Reducer<B, A>, init?: B): Transducer<A, B>;
export declare function scan<A, B>(rfn: Reducer<B, A>, init: B, src: Iterable<A>): IterableIterator<B>;
//# sourceMappingURL=scan.d.ts.map