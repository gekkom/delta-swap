import type { Transducer } from "./api.js";
/**
 * Transducer which only yields the first `n` values and then terminates
 * transformation (by emitting a {@link reduced} value).
 *
 * @example
 * ```ts
 * [...iterator(comp(take(5), map((x) => x * 10)), range(10))]
 * // [ 0, 10, 20, 30, 40 ]
 * ```
 *
 * @param n -
 */
export declare function take<T>(n: number): Transducer<T, T>;
export declare function take<T>(n: number, src: Iterable<T>): IterableIterator<T>;
//# sourceMappingURL=take.d.ts.map