import type { IReducible, Reducer, Transducer, TxLike } from "./api.js";
export declare function transduce<A, B, C>(tx: TxLike<A, B>, rfn: Reducer<C, B>): Transducer<Iterable<A>, C>;
export declare function transduce<A, B, C>(tx: TxLike<A, B>, rfn: Reducer<C, B>, xs: Iterable<A>): C;
export declare function transduce<A, B, C>(tx: TxLike<A, B>, rfn: Reducer<C, B>, xs: IReducible<C, A>): C;
export declare function transduce<A, B, C>(tx: TxLike<A, B>, rfn: Reducer<C, B>, acc: C, xs: Iterable<A>): C;
export declare function transduce<A, B, C>(tx: TxLike<A, B>, rfn: Reducer<C, B>, acc: C, xs: IReducible<C, A>): C;
export declare function transduceRight<A, B, C>(tx: TxLike<A, B>, rfn: Reducer<C, B>): Transducer<ArrayLike<A>, C>;
export declare function transduceRight<A, B, C>(tx: TxLike<A, B>, rfn: Reducer<C, B>, xs: ArrayLike<A>): C;
export declare function transduceRight<A, B, C>(tx: TxLike<A, B>, rfn: Reducer<C, B>, acc: C, xs: ArrayLike<A>): C;
//# sourceMappingURL=transduce.d.ts.map